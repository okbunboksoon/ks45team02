<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ks45team02.ire.admin.mapper.GoodsMapper">
	<resultMap id="GoodsResultMap" type="Goods">
	        <id property="goodsCode"                     column="goods_code" />
	        <result property="goodsName"                 column="goods_name"/>
	        <result property="categoryMediumCode"        column="category_medium_code"/>
	        <result property="categoryMediumName"        column="category_medium_name"/>
	        <result property="goodsPrice"                 column="goods_price"/>
	        <result property="goodsColor"                 column="goods_color"/>
	        <result property="goodsSize"                 column="goods_size"/>
	        <result property="goodsRegDate"             column="goods_reg_date"/>
	        <result property="goodsSangse"                 column="goods_sangse"/>
	        <result property="fileIdx"                 column="file_idx"/>
	        <result property="fabric"                     column="fabric"/>
	        <result property="rate"                     column="rate"/>
	        <result property="upcyclingCarbonDioxideEmissionLevel" column="upcycling_carbon_dioxide_emission_level"/>
	        <result property="fileSangseIdx"                     column="file_sangse_idx"/>
	            <association property="unitPrice" javaType="UnitPrice">
	            <id property="goodsCode"                 column="goods_code" />
	            <result property="factoryGoodsPrice"     column="factory_goods_price"/>
	            <result property="goodsPrice"            column="goods_price"/>
	            </association>
	    </resultMap>
	
	<select id="goodsCheck" parameterType="String" resultType="int">
		<!-- 상품코드로 상품 존재여부 확인 -->
		SELECT 
			COUNT(1)
		FROM 
			goods 
		WHERE 
			goods_code = #{goodsCode};
	</select>
	
	<select id="searchGoods" resultMap="GoodsResultMap" parameterType="String">
		<!-- 상품 검색 -->
		SELECT 
			 g.goods_code
			,g.goods_name
			,cm.category_medium_name
			,g.goods_price
			,g.goods_color
			,g.goods_size
		FROM 
			goods AS g
			INNER JOIN 
			category_medium AS cm
			ON  
			g.category_medium_code = cm.category_medium_code
		<where>
			<if test="searchKey != null and searchKey != '' and searchValue != null and searchValue != ''">
				${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
			</if>
		</where>
	</select>
	
	<!-- 상품 리스트 조회 -->
	<select id="getListGoods" resultMap="GoodsResultMap">
		SELECT
			g.goods_code
			,g.goods_name
			,g.category_medium_code
			,g.goods_price
			,g.goods_color
			,g.goods_size
			,g.goods_reg_date
			,g.goods_sangse
			,g.fabric
			,g.rate
			,g.upcycling_carbon_dioxide_emission_level
			,g.file_idx	
		FROM
			goods AS g
	</select>
	
	<!-- 상품 이름 중복 체크 -->
	<select id="checkGoodsName" parameterType="String" resultType="boolean">
	SELECT
		IF(COUNT(*)=1, 1, 0)
	FROM
		goods AS g
	WHERE
		g.goods_name = #{goodsName}
	</select>
	
	<!-- 상품 및 단가 검색 -->
    <select id="searchGoodsUnitprice" resultMap="GoodsResultMap" parameterType="String">
        SELECT 
             g.goods_code
            ,g.goods_name
            ,g.goods_price
            ,g.goods_color
            ,g.goods_size
            ,u.goods_code
            ,u.factory_goods_price
            ,u.goods_price
        FROM 
            goods AS g
            INNER JOIN 
            goods_unit_price_info AS u
            ON
            g.goods_code = u.goods_code
        <where>
            <if test="searchKey != null and searchKey != '' and searchValue != null and searchValue != ''">
                ${searchKey} LIKE CONCAT('%', #{searchValue}, '%')
            </if>
        </where>
    </select>
    
    <!-- 상품코드로 상품 및 단가 검색 -->
    <select id="getListGoodsAndUnitPrice" parameterType="String" resultMap="GoodsResultMap">
    	SELECT
			 g.goods_code
			,g.goods_name
			,g.category_medium_code
			,g.goods_price
			,g.goods_color
			,g.goods_size
			,g.goods_reg_date
			,g.goods_sangse
			,g.fabric
			,g.rate
			,g.upcycling_carbon_dioxide_emission_level
			,g.file_idx	
			,u.goods_code
			,u.factory_goods_price
			,u.goods_price
		FROM
			goods AS g
			INNER JOIN
			goods_unit_price_info AS u
			on
			g.goods_code = u.goods_code
		WHERE
			g.goods_code = #{goodsCode}
    </select>
    
    <!-- 상품 등록  -->
    <insert id="addGoods">
        INSERT INTO goods
            (goods_code, goods_name, category_medium_code, goods_price, 
             goods_color, goods_size, goods_reg_date, goods_sangse, 
             fabric, rate, upcycling_carbon_dioxide_emission_level, file_idx, file_sangse_idx)
        VALUES 
            (sf_new_goods_code(), #{goodsName}, #{categoryMediumCode}, #{goodsPrice}, #{goodsColor}, 
             #{goodsSize}, NOW(), #{goodsSangse}, #{fabric}, #{rate}, 0, sf_new_file_code(), sf_new_goods_idx_code())
    </insert>
	
	<!-- 상품 수정 -->
	<update id="modifyGoods" parameterType="Goods">
		UPDATE goods
			<trim prefix="SET" prefixOverrides=",">
			<if test="goodsName != null and goodsName != '' ">
			,goods_name= #{goodsName}
			</if>
			<if test="categoryMediumCode != null and categoryMediumCode != '' ">
			,category_medium_code= #{categoryMediumCode}
			</if>
			<if test="goodsPrice != null and goodsPrice != '' ">
			,goods_price= #{goodsPrice}
			</if>
			<if test="goodsColor != null and goodsColor != '' ">
			,goods_color= #{goodsColor}
			</if>
			<if test="goodsSize != null and goodsSize != '' ">
			,goods_size= #{goodsSize}
			</if>
			<if test="goodsSangse != null and goodsSangse != '' ">
			,goods_sangse= #{goodsSangse}
			</if>
			<if test="fabric != null and fabric != '' ">
			,fabric= #{fabric}
			</if>
			<if test="rate != null and rate != '' ">
			,rate= #{rate}
			</if>
			<if test="upcyclingCarbonDioxideEmissionLevel != null and upcyclingCarbonDioxideEmissionLevel != '' ">
			,upcycling_carbon_dioxide_emission_level= ${upcyclingCarbonDioxideEmissionLevel}
			</if>
		</trim>
	WHERE goods_code= #{goodsCode}
	</update>
	
    <!-- FirstFabric가져오기 -->
    <select id="getFirstFabic" parameterType="Goods" resultType="String">
        SELECT
            SUBSTRING_INDEX(g.fabric, ':', 1)
        FROM
            goods AS g
        WHERE
         g.goods_code = sf_select_goods_code()
    </select>


    <!-- LastFabric가져오기 -->
    <select id="getLastFabic" parameterType="Goods" resultType="String">
        SELECT
            SUBSTRING_INDEX(g.fabric, ':', -1)
        FROM
            goods AS g
        WHERE
         g.goods_code = sf_select_goods_code()
    </select>

    <!-- FirstRate가져오기 -->
    <select id="getFirstRate" parameterType="Goods" resultType="int">
        SELECT
            SUBSTRING_INDEX(g.rate, ':', 1)
            FROM
            goods AS g
        WHERE
         g.goods_code = sf_select_goods_code()
    </select>

    <!-- LastRate가져오기 -->
    <select id="getLastRate" parameterType="Goods" resultType="int">
        SELECT
            SUBSTRING_INDEX(g.rate, ':', -1)
            FROM
            goods AS g
        WHERE
         g.goods_code = sf_select_goods_code()
    </select>

    <!-- upcycling_carbon_dioxide_emission_level 업데이트 -->
    <update id="updateEmissionLevel" parameterType="double">
        UPDATE goods AS g
        SET
            upcycling_carbon_dioxide_emission_level= ${emissionLevel}
        WHERE 
            g.goods_code = sf_select_goods_code()
    </update>
    
    <!-- 상품삭제 -->
    <delete id="deleteGoods" parameterType="String">
	    DELETE 
		FROM
			goods AS g
		WHERE
			g.goods_code = #{goodsCode}
    </delete>
</mapper>